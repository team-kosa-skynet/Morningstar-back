### Gemini Interview Test

### 1. Start Interview Session (Gemini)
POST {{baseUrl}}/api/interview/session
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "jobRole": "BACKEND_DEVELOPER",
  "displayName": "테스트 사용자"
}

> {% 
client.global.set("sessionId", response.body.data.sessionId);
client.log("Session ID: " + response.body.data.sessionId);
client.log("First Question: " + response.body.data.firstQuestion);
client.log("Question Intent: " + response.body.data.questionIntent);
client.log("Answer Guides: " + JSON.stringify(response.body.data.answerGuides));
%}

### 2. Answer First Question
POST {{baseUrl}}/api/interview/turn
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "sessionId": "{{sessionId}}",
  "questionIndex": 0,
  "transcript": "안녕하세요. 저는 3년 경력의 백엔드 개발자입니다. 주로 Spring Boot와 Java를 사용하여 REST API를 개발해왔고, 최근에는 MSA 아키텍처 도입 프로젝트에 참여했습니다. 데이터베이스는 MySQL과 Redis를 주로 사용하며, AWS를 통한 배포 경험도 있습니다."
}

### 3. Answer Second Question  
POST {{baseUrl}}/api/interview/turn
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "sessionId": "{{sessionId}}",
  "questionIndex": 1,
  "transcript": "최근에 트래픽이 급증하면서 데이터베이스 성능 문제가 발생했습니다. 상황을 분석해보니 N+1 쿼리 문제와 인덱스 부족이 원인이었습니다. JPA의 @EntityGraph를 활용해 N+1 문제를 해결하고, 자주 사용되는 컬럼에 복합 인덱스를 추가했습니다. 결과적으로 응답 시간을 70% 단축시킬 수 있었습니다."
}

### 4. Finalize Report
POST {{baseUrl}}/api/interview/report/finalize
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "sessionId": "{{sessionId}}"
}

### 5. Get Scores
GET {{baseUrl}}/api/interview/{{sessionId}}/scores
Authorization: Bearer {{token}}

### Variables for development environment
@baseUrl = http://localhost:8080
@token = your_jwt_token_here